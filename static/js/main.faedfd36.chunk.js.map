{"version":3,"sources":["assets/icons/backspace.svg","assets/icons/correct.svg","assets/icons/wrong.svg","assets/quationimg/q1.jpg","containers/QuizList.js","containers/Quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","App.js","store/reducers/quiz.js","store/reducers/rootReducer.js","serviceWorker.js","index.js"],"names":["module","exports","QuizList","className","style","background","this","props","quizes","map","quiz","idx","to","id","key","gradient","name","Component","connect","state","Quiz","step","isFinished","pickedAnswers","nextQuestion","pickedAnswer","Number","currentQuiz","questions","length","setState","newPickedAnswers","pickStep","restart","getQuiz","match","params","src","backspaceImg","alt","question","title","correctAnswer","correctImg","wrongImg","onClick","width","img","answers","answer","data-test","dispatch","quizId","type","App","exact","path","component","initalState","combineReducers","action","find","Boolean","window","location","hostname","store","createStore","rootReducer","applyMiddleware","getState","next","console","log","returnValue","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.faedfd36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backspace.6a9f202e.svg\";","module.exports = __webpack_public_path__ + \"static/media/correct.e19005cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/wrong.7d1873ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/q1.6556e305.jpg\";","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass QuizList extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<main className=\"quiz-list\" style={{background: '#333'}}>\r\n\t\t\t\t<h1 className=\"title\">Quiz</h1>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"quizes\">\r\n\t\t\t\t\t\t{this.props.quizes.map((quiz, idx) => (\r\n\t\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\t\tclassName='quizes__item'\r\n\t\t\t\t\t\t\t\tto={`/quiz/${quiz.id}`}\r\n\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\tstyle={{background: quiz.gradient}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{quiz.name}\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tquizes: state.quiz.quizes\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuizList)","import React, {Component, Fragment} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport {getQuiz} from '../store/actions/quiz'\r\n\r\nimport backspaceImg from '../assets/icons/backspace.svg'\r\nimport correctImg from '../assets/icons/correct.svg'\r\nimport q1 from '../assets/quationimg/q1.jpg'\r\nimport wrongImg from '../assets/icons/wrong.svg'\r\n\r\nclass Quiz extends Component {\r\n\tstate = {\r\n\t\tstep: 0,\r\n\t\tisFinished: false,\r\n\t\tpickedAnswers: []\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getQuiz(this.props.match.params.id)\r\n\t}\r\n\r\n\tnextQuestion = (pickedAnswer) => {\r\n\t\tif (Number(this.state.step) !== this.props.currentQuiz.questions.length-1) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tstep: this.state.step + 1\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisFinished: true\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst newPickedAnswers = [...this.state.pickedAnswers]\r\n\t\tnewPickedAnswers[this.state.step] = pickedAnswer\r\n\t\tthis.setState({\r\n\t\t\tpickedAnswers: newPickedAnswers\r\n\t\t})\r\n\t}\r\n\r\n\tpickStep = (step) => {\r\n\t\tthis.setState({\r\n\t\t\tstep\r\n\t\t})\r\n\t}\r\n\r\n\trestart = () => {\r\n\t\tthis.setState({\r\n\t\t\tstep: 0,\r\n\t\t\tisFinished: false,\r\n\t\t\tpickedAnswers: []\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<main className=\"quiz-single\" style={{background: this.props.currentQuiz.gradient}}>\r\n\t\t\t\t<NavLink to=\"/\" className=\"backspace\">\r\n\t\t\t\t\t<img src={backspaceImg} alt=\"backspace\" />\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<h1 className=\"title\">{this.props.currentQuiz.name}</h1>\r\n\t\t\t\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\r\n\t\t\t\t\t<div className=\"quiz\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t{!this.state.isFinished ? (\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<div className=\"quiz__question\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{this.props.currentQuiz.questions[this.state.step].title}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"img__question\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<img width={660} src={this.props.currentQuiz.img} alt=\"correctImg\" />\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"quiz__answers\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{this.props.currentQuiz.questions[this.state.step].answers.map((answer, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tdata-test={this.state.pickedAnswers[idx]}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={`quiz__answer ${this.state.pickedAnswers[this.state.step] === answer ? 'active' : ''}`}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.nextQuestion(answer)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{answer}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"quiz__steps\">\r\n\t\t\t\t\t\t\t\t\t{this.props.currentQuiz.questions.map((question, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={`quiz__step ${this.state.pickedAnswers.length >= idx ? 'active' : ''}`}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.state.step >= idx ? this.pickStep(idx) : false}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{idx+1}\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<h1 className=\"quiz__finish-title\">Вы успешно прошли тест!</h1>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"quiz__finish-result\">\r\n\t\t\t\t\t\t\t\t\t{this.props.currentQuiz.questions.map((question, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"quiz__finish-answer\" key={idx}>\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t{question.title}\r\n\t\t\t\t\t\t\t\t\t\t\t<strong>{this.state.pickedAnswers[idx]}</strong>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t{question.correctAnswer === this.state.pickedAnswers[idx] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={correctImg} alt=\"correctImg\" />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={wrongImg} alt=\"correctImg\" />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"quiz__finish-btns\">\r\n\t\t\t\t\t\t\t\t\t<button onClick={this.restart}>Начать заново</button>\r\n\t\t\t\t\t\t\t\t\t<NavLink to=\"/\">Вернуться на главную</NavLink>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst  mapStateToProps = state => {\r\n\treturn {\r\n\t\tcurrentQuiz: state.quiz.currentQuiz\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tgetQuiz: quizId => dispatch(getQuiz(quizId))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import {GET_QUIZES, GET_QUIZ} from './actionTypes'\r\n\r\nexport const getQuizes = () => {\r\n\treturn {\r\n\t\ttype: GET_QUIZES\r\n\t}\r\n}\r\n\r\nexport const getQuiz = (quizId) => {\r\n\treturn {\r\n\t\ttype: GET_QUIZ,\r\n\t\tquizId\r\n\t}\r\n}","export const GET_QUIZ = 'GET_QUIZ'\r\nexport const GET_QUIZES = 'GET_QUIZES'","import React from 'react'\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\n\nimport QuizList from './containers/QuizList'\nimport Quiz from './containers/Quiz'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={QuizList} />\n        <Route path=\"/quiz/:id\" component={Quiz} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import {GET_QUIZ} from '../actions/actionTypes'\r\n\r\nconst initalState = {\r\n\tquizes: [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tname: 'Тест по Dota 2',\r\n\t\t\tgradient: 'linear-gradient(21deg, #dd03e4, #5611ec)',\r\n\t\t\timg:'https://9jm.org/images/games/00940/91701.jpg',\r\n\t\t\tquestions: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Куда пойти?',\r\n\t\t\t\t\tanswers: ['Туда', 'Сюда', 'Влево', 'Вправо',],\r\n\t\t\t\t\tcorrectAnswer: 'Туда'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\t\r\n\t\t\tname: 'Тест по Javascript',\r\n\t\t\tgradient: 'linear-gradient(85deg, #fb63f9, #c2e534)',\r\n\t\t\tquestions: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Что из перечисленного не относится к JS:',\r\n\t\t\t\t\tanswers: ['React', 'Vue', 'Laravel', 'Express'],\r\n\t\t\t\t\tcorrectAnswer: 'Laravel'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Какой тип переменных лучше ипользовать:',\r\n\t\t\t\t\tanswers: ['var', 'let/const'],\r\n\t\t\t\t\tcorrectAnswer: 'let/const'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Какого нету логического оператора в JS:',\r\n\t\t\t\t\tanswers: ['||', '&&', '!', '^!'],\r\n\t\t\t\t\tcorrectAnswer: '^!'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Какого паттерна нету в JS:',\r\n\t\t\t\t\tanswers: ['Строитель', 'Адаптер', 'Компоновщик', 'Дрессировщик', 'Наблюдатель'],\r\n\t\t\t\t\tcorrectAnswer: 'Дрессировщик'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t\r\n\t],\r\n\tcurrentQuiz: {\r\n\t\tid: null,\r\n\t\tname: '',\r\n\t\tquestions: [\r\n\t\t\t{\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tanswers: [],\r\n\t\t\t\tcorrectAnswer: ''\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}\r\n\r\nexport default function quizReducer(state = initalState, action) {\r\n\tswitch(action.type) {\r\n\t\tcase GET_QUIZ:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentQuiz: state.quizes.find(quiz => quiz.id === Number(action.quizId))\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import {combineReducers} from 'redux'\r\nimport quiz from './quiz'\r\n\r\nexport default combineReducers({\r\n\tquiz\r\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\n\nimport App from './App'\n\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\n\nimport * as serviceWorker from './serviceWorker'\n\nfunction logger({ getState }) {\n  return next => action => {\n    console.log('will dispatch', action)\n\n    // Call the next dispatch method in the middleware chain.\n    const returnValue = next(action)\n\n    console.log('state after dispatch', getState())\n\n    // This will likely be the action itself, unless\n    // a middleware further in chain changed it.\n    return returnValue\n  }\n}\n\nconst store = createStore(rootReducer, applyMiddleware(logger))\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}