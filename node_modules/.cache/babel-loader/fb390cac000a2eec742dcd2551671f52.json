{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ilya'\\\\Desktop\\\\react-quiz-master1\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport * as serviceWorker from './serviceWorker';\n\nfunction logger({\n  getState\n}) {\n  return next => action => {\n    console.log('will dispatch', action); // Call the next dispatch method in the middleware chain.\n\n    const returnValue = next(action);\n    console.log('state after dispatch', getState()); // This will likely be the action itself, unless\n    // a middleware further in chain changed it.\n\n    return returnValue;\n  };\n}\n\nconst store = createStore(rootReducer, applyMiddleware(logger));\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 2\n}, this), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/Ilya'/Desktop/react-quiz-master1/src/index.js"],"names":["React","ReactDOM","App","createStore","applyMiddleware","Provider","rootReducer","serviceWorker","logger","getState","next","action","console","log","returnValue","store","render","document","getElementById","unregister"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,aAAP;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SAAQC,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA8B;AAC5B,SAAOC,IAAI,IAAIC,MAAM,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,MAA7B,EADuB,CAGvB;;AACA,UAAMG,WAAW,GAAGJ,IAAI,CAACC,MAAD,CAAxB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,QAAQ,EAA5C,EANuB,CAQvB;AACA;;AACA,WAAOK,WAAP;AACD,GAXD;AAYD;;AAED,MAAMC,KAAK,GAAGZ,WAAW,CAACG,WAAD,EAAcF,eAAe,CAACI,MAAD,CAA7B,CAAzB;AAEAP,QAAQ,CAACe,MAAT,eACC,QAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA,yBACC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADD,EAGcE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHd,E,CAKA;AACA;AACA;;AACAX,aAAa,CAACY,UAAd","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\n\nimport App from './App'\n\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\n\nimport * as serviceWorker from './serviceWorker'\n\nfunction logger({ getState }) {\n  return next => action => {\n    console.log('will dispatch', action)\n\n    // Call the next dispatch method in the middleware chain.\n    const returnValue = next(action)\n\n    console.log('state after dispatch', getState())\n\n    // This will likely be the action itself, unless\n    // a middleware further in chain changed it.\n    return returnValue\n  }\n}\n\nconst store = createStore(rootReducer, applyMiddleware(logger))\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"]},"metadata":{},"sourceType":"module"}