{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ilya'\\\\Desktop\\\\react-quiz-master1\\\\src\\\\containers\\\\Quiz.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getQuiz } from '../store/actions/quiz';\nimport backspaceImg from \"../assets/icons/backspace.svg\";\nimport correctImg from \"../assets/icons/correct.svg\";\nimport wrongImg from \"../assets/icons/wrong.svg\";\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 0,\n      isFinished: false,\n      pickedAnswers: []\n    };\n\n    this.nextQuestion = pickedAnswer => {\n      if (Number(this.state.step) !== this.props.currentQuiz.questions.length - 1) {\n        this.setState({\n          step: this.state.step + 1\n        });\n      } else {\n        this.setState({\n          isFinished: true\n        });\n      }\n\n      const newPickedAnswers = [...this.state.pickedAnswers];\n      newPickedAnswers[this.state.step] = pickedAnswer;\n      this.setState({\n        pickedAnswers: newPickedAnswers\n      });\n    };\n\n    this.pickStep = step => {\n      this.setState({\n        step\n      });\n    };\n\n    this.restart = () => {\n      this.setState({\n        step: 0,\n        isFinished: false,\n        pickedAnswers: []\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getQuiz(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"quiz-single\",\n      style: {\n        background: this.props.currentQuiz.gradient\n      },\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        className: \"backspace\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: backspaceImg,\n          alt: \"backspace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: this.props.currentQuiz.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz\",\n          children: !this.state.isFinished ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quiz__question\",\n              children: this.props.currentQuiz.questions[this.state.step].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quiz__answers\",\n              children: this.props.currentQuiz.questions[this.state.step].answers.map((answer, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                \"data-test\": this.state.pickedAnswers[idx],\n                className: `quiz__answer ${this.state.pickedAnswers[this.state.step] === answer ? 'active' : ''}`,\n                onClick: () => this.nextQuestion(answer),\n                children: answer\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 11\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quiz__steps\",\n              children: this.props.currentQuiz.questions.map((question, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `quiz__step ${this.state.pickedAnswers.length >= idx ? 'active' : ''}`,\n                onClick: () => this.state.step >= idx ? this.pickStep(idx) : false,\n                children: idx + 1\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 11\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 8\n          }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"quiz__finish-title\",\n              children: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u043F\\u0440\\u043E\\u0448\\u043B\\u0438 \\u0442\\u0435\\u0441\\u0442!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quiz__finish-result\",\n              children: this.props.currentQuiz.questions.map((question, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"quiz__finish-answer\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [question.title, /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: this.state.pickedAnswers[idx]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 11\n                }, this), question.correctAnswer === this.state.pickedAnswers[idx] ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: correctImg,\n                  alt: \"correctImg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 12\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: wrongImg,\n                  alt: \"correctImg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 12\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 11\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quiz__finish-btns\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.restart,\n                children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                to: \"/\",\n                children: \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentQuiz: state.quiz.currentQuiz\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuiz: quizId => dispatch(getQuiz(quizId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","map":{"version":3,"sources":["C:/Users/Ilya'/Desktop/react-quiz-master1/src/containers/Quiz.js"],"names":["React","Component","Fragment","connect","NavLink","getQuiz","Quiz","state","step","isFinished","pickedAnswers","nextQuestion","pickedAnswer","Number","props","currentQuiz","questions","length","setState","newPickedAnswers","pickStep","restart","componentDidMount","match","params","id","render","background","gradient","backspaceImg","name","title","answers","map","answer","idx","question","correctAnswer","correctImg","wrongImg","mapStateToProps","quiz","mapDispatchToProps","dispatch","quizId"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport {getQuiz} from '../store/actions/quiz'\r\n\r\nimport backspaceImg from '../assets/icons/backspace.svg'\r\nimport correctImg from '../assets/icons/correct.svg'\r\nimport wrongImg from '../assets/icons/wrong.svg'\r\n\r\nclass Quiz extends Component {\r\n\tstate = {\r\n\t\tstep: 0,\r\n\t\tisFinished: false,\r\n\t\tpickedAnswers: []\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getQuiz(this.props.match.params.id)\r\n\t}\r\n\r\n\tnextQuestion = (pickedAnswer) => {\r\n\t\tif (Number(this.state.step) !== this.props.currentQuiz.questions.length-1) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tstep: this.state.step + 1\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisFinished: true\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst newPickedAnswers = [...this.state.pickedAnswers]\r\n\t\tnewPickedAnswers[this.state.step] = pickedAnswer\r\n\t\tthis.setState({\r\n\t\t\tpickedAnswers: newPickedAnswers\r\n\t\t})\r\n\t}\r\n\r\n\tpickStep = (step) => {\r\n\t\tthis.setState({\r\n\t\t\tstep\r\n\t\t})\r\n\t}\r\n\r\n\trestart = () => {\r\n\t\tthis.setState({\r\n\t\t\tstep: 0,\r\n\t\t\tisFinished: false,\r\n\t\t\tpickedAnswers: []\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<main className=\"quiz-single\" style={{background: this.props.currentQuiz.gradient}}>\r\n\t\t\t\t<NavLink to=\"/\" className=\"backspace\">\r\n\t\t\t\t\t<img src={backspaceImg} alt=\"backspace\" />\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<h1 className=\"title\">{this.props.currentQuiz.name}</h1>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"quiz\">\r\n\t\t\t\t\t\t{!this.state.isFinished ? (\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<div className=\"quiz__question\">\r\n\t\t\t\t\t\t\t\t\t{this.props.currentQuiz.questions[this.state.step].title}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"quiz__answers\">\r\n\t\t\t\t\t\t\t\t\t{this.props.currentQuiz.questions[this.state.step].answers.map((answer, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tdata-test={this.state.pickedAnswers[idx]}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={`quiz__answer ${this.state.pickedAnswers[this.state.step] === answer ? 'active' : ''}`}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.nextQuestion(answer)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{answer}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"quiz__steps\">\r\n\t\t\t\t\t\t\t\t\t{this.props.currentQuiz.questions.map((question, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={`quiz__step ${this.state.pickedAnswers.length >= idx ? 'active' : ''}`}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.state.step >= idx ? this.pickStep(idx) : false}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{idx+1}\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<h1 className=\"quiz__finish-title\">Вы успешно прошли тест!</h1>\r\n\t\t\t\t\t\t\t\t<div className=\"quiz__finish-result\">\r\n\t\t\t\t\t\t\t\t\t{this.props.currentQuiz.questions.map((question, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"quiz__finish-answer\" key={idx}>\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t{question.title}\r\n\t\t\t\t\t\t\t\t\t\t\t<strong>{this.state.pickedAnswers[idx]}</strong>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t{question.correctAnswer === this.state.pickedAnswers[idx] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={correctImg} alt=\"correctImg\" />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={wrongImg} alt=\"correctImg\" />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"quiz__finish-btns\">\r\n\t\t\t\t\t\t\t\t\t<button onClick={this.restart}>Начать заново</button>\r\n\t\t\t\t\t\t\t\t\t<NavLink to=\"/\">Вернуться на главную</NavLink>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst  mapStateToProps = state => {\r\n\treturn {\r\n\t\tcurrentQuiz: state.quiz.currentQuiz\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tgetQuiz: quizId => dispatch(getQuiz(quizId))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)"]},"metadata":{},"sourceType":"module"}